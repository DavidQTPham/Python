#! /usr/bin/python
# -*- coding: utf-8 -*-
### 
### the four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
###
### 73167176531330624919225119674426574742355349194934
### 96983520312774506326239578318016984801869478851843
### 85861560789112949495459501737958331952853208805511
### 12540698747158523863050715693290963295227443043557
### 66896648950445244523161731856403098711121722383113
### 62229893423380308135336276614282806444486645238749
### 30358907296290491560440772390713810515859307960866
### 70172427121883998797908792274921901699720888093776
### 65727333001053367881220235421809751254540594752243
### 52584907711670556013604839586446706324415722155397
### 53697817977846174064955149290862569321978468622482
### 83972241375657056057490261407972968652414535100474
### 82166370484403199890008895243450658541227588666881
### 16427171479924442928230863465674813919123162824586
### 17866458359124566529476545682848912883142607690042
### 24219022671055626321111109370544217506941658960408
### 07198403850962455444362981230987879927244284909188
### 84580156166097919133875499200524063689912560717606
### 05886116467109405077541002256983155200055935729725
### 71636269561882670428252483600823257530420752963450
###
### find the thirteen adjacent digits in the 1000-digit number that have the greatest product. what is the value of this product?

bigstring = "\
73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450\
"

# print (bigstring)

## below code tested for the highest product of 4 consecutive number in the string - Could be made into a function
## max_length = len(bigstring) -3
## counter = 0
## value = 0
## max_product = 0
## maxv1 = 0
## maxv2 = 0
## maxv3 = 0
## maxv4 = 0
##
## while (counter < max_length):
##   value = int(bigstring[counter]) * int(bigstring[counter + 1]) * int(bigstring[counter + 2]) * int(bigstring[counter + 3])
##  if (value > max_product):
##    max_product = value
##     maxv1 = bigstring[counter]
##    maxv2 = bigstring[counter + 1]
##     maxv3 = bigstring[counter + 2]
##    maxv4 = bigstring[counter + 3]
##  counter += 1
##
## print ("max product found: " + maxv1 + " * " + maxv2 + " * " + maxv3 + " * " + maxv4 + " = " + str(max_product))
  

#####
#####   Below code tests for the highest product of 13 consecutive number in this string
max_length = len(bigstring) - 13
i = 0
value = 0
max_product = 0
v1 = 0
v2 = 0
v3 = 0
v4 = 0
v5 = 0
v6 = 0
v7 = 0
v8 = 0
v9 = 0
v10 = 0
v11 = 0
v12 = 0
v13 = 0

while (i < max_length):
  value = int(bigstring[i]) * int(bigstring[i + 1]) * int(bigstring[i + 2]) * int(bigstring[i + 3]) *\
int(bigstring[i + 4]) * int(bigstring[i + 5]) * int(bigstring[i + 6]) * int(bigstring[i + 7]) *\
int(bigstring[i + 8]) * int(bigstring[i + 9]) * int(bigstring[i + 10]) * int(bigstring[i + 11]) * int(bigstring[i + 12])
  print(str(value))
  if (value > max_product):
    max_product = value
    v1 = bigstring[i]
    v2 = bigstring[i +1]
    v3 = bigstring[i +2]
    v4 = bigstring[i +3]
    v5 = bigstring[i +4]
    v6 = bigstring[i +5]
    v7 = bigstring[i +6]
    v8 = bigstring[i +7]
    v9 = bigstring[i +8]
    v10 = bigstring[i +9]
    v11 = bigstring[i +10]
    v12 = bigstring[i + 11]
    v13 = bigstring[i + 12]
  i += 1
print ("The largest product of the 13 consecutive numbers in this string: " )
print (v1 + " * " + v2 + " * " + v3 + " * " + v4 + " * " + v5 + " * " + v6 + " * " + v7 + " * " + v8 + " * " + v9 +\
" * " + v10 + " * " + v11 + " * " + v12 + " * " + v13 + " = " + str(max_product))
